<h3>Choose Schedule Details</h3>
<% obj = @candidate.nil? ? @interview : [@candidate,@interview] %>
<%= form_for obj, :html => {:id => "interview_form", :remote => params[:view] == "calendar" ? true : false} do |f| %>
<% if @interview.errors.any? %>
<div id="error_explanation">
  <h2><%= pluralize(@interview.errors.count, "error") %> prohibited this interview from being saved:</h2>
  <ul>
    <% @interview.errors.full_messages.each do |msg| %>
    <li>
      <%= msg %>
    </li>
    <% end %>
  </ul>
</div>
<% end %>
<%= hidden_field_tag :edit_action, "false" %>
<%= hidden_field_tag :mark_to_delete %>
<table width="90%" cellpadding="5" cellspacing="5" style="border: 1px solid #ccc">
  <tr>
    <td width="33%"><strong><%= f.label :user_id, "Assigned to" %>: </strong><%= f.select :user_id, User.interview_panel.collect{|u| [ u.name, u.id ]}, :selected => params[:interviewer_filter] %></td>
<%if params[:action]=="edit"%>
    <td width="33%"><strong><%= f.label :scheduled_at %>: </strong><%= text_field :edit, :date_scheduled_at,:value=>f.object.formated_scheduled_at, :size => 23, :class => "datetime_picker_edit" %></td>
<%else%>
<td width="33%"><strong><%= f.label :scheduled_at %>: </strong><%= f.text_field :scheduled_at, :size => 23, :class => "datetime_picker" %></td>
<%end%>
  </tr>
  <tr>
    <td colspan="2">
          <strong><%= label_tag "Interview Type" %>: </strong>
         <%=  f.radio_button :interview_type, "Telephonic",:checked=>true %> Telephonic
         <%=  f.radio_button :interview_type, "Face To Face" %> Face To Face
    </td>
  </tr>

  <tr>
    <td colspan="2">
      <strong><%= label_tag "Other Interviewers(Optional)" %>: </strong>
      <input type="text" class="token_input" name="other_interviewers" id="other_interviewers" size="20" data-pre="<%= @interview.interviewers.collect { |int| {:id => int.id, :name => int.user.name }}.to_json unless @interview.interviewers.blank?  %>" data-url="<%= fetch_users_path(:assgined_id => "0") %>" data-token-limit="2" data-hint-text="Type in a Interviewer Name" data-noresults = "No Interviewers Found" data-searching-text="Searching Interviewers..." />
      <%= hidden_field_tag 'interviewer_id' %>
      <%= hidden_field_tag 'existing_interviewers', @interview.interviewers.map(&:id).join(',') %>
    </td>
  </tr>

  <tr>
    <td colspan="2">
      <% if @candidate.nil? %>
          <strong><%= label_tag "Candidate Name" %>: </strong>
          <%= text_field_tag :candidate_name, nil, :id => "autocomplete", :size => "20", :class => "token_input", :data => {:url => fetch_candidates_path, :hint_text => "Type in a Candidate Name", :token_limit => "1", :noresults => "No Candidates Found", :searching_text => "Searching Candidates..." } %>
          <%= f.hidden_field 'candidate_id', :id => 'candidate_id', :value => "" %>
        <% else %>
          <%= f.hidden_field :candidate_id, :id => 'candidate_id', :value => (params[:candidate_id] ? params[:candidate_id] : @interview.candidate_id) %>
      <% end %>
    </td>
  </tr>

  <tr>
    <td colspan="2"><%= f.submit %><span id="msg" style = "display:none;" class="red margin-left"></span>
  </tr>
<div class="actions">

</div>
<% end %>
</table>
<script>
  function buildURI() {
    var assigned_id = '';
    $('#interview_user_id').change(function(){
      assigned_id = this.value;
    }).trigger('change');
    var return_uri = "<%= fetch_users_path('assigned_id') %>";
    return return_uri.replace('assigned_id', assigned_id)
  }

  $(function() {
      $('#interview_user_id').focus();
      $("#interview_form")
      .bind("submit", function() {
      if ($("#candidate_id").val() == "") {
        $("#msg").text("Please Choose any Candidate!").show().fadeOut(5000);
        return false;
      }
    })
    .bind("ajax:success", function(event, data, status, xhr) {
        $('.token-input-dropdown-facebook').hide();
        $('#autocomplete').tokenInput("clear");
        $(this)[0].reset();
    });


    $(".token_input").each(function(i, el){
      var el = $(this);
      var edit_action = $('#edit_action').val();
      if((edit_action == "true") || ($('#token-input-'+el.attr("id")).length == 0)) {
      if (el.attr("id") == 'other_interviewers') {
      var uri = buildURI;
      var results_format = function(item) {
      return "<li><div style='display: inline-block; padding-left: 10px;'><div class='full_name'>" + item.name + "</div><div class='email'>" + item.subject + "</div></div></li>"
    }
    <% if params[:action] == "edit" %>
    var add_array = new Array();
    var addCandiInfo = function(item) {
      add_array.push(item.id);
      $('#event_desc').find($('input#interviewer_id')).val(add_array);
    }

    var del_array = new Array();
    var markToDelete = function(item) {
      var interviewers = $('#event_desc').find($('input#existing_interviewers')).val();
      interviewers = interviewers.split(',');
      e = item.id.toString();
      if($.inArray(e,interviewers) != -1) {
        del_array.push(e);
        $('#event_desc').find($('input#mark_to_delete')).val(del_array);
      }
      if($.inArray(item.id,add_array) != -1) {
        add_array.splice($.inArray(item.id,add_array),1);
        $('#event_desc').find($('input#interviewer_id')).val(add_array);
      }
//      alert($('#event_desc').find($('input#mark_to_delete')).val());
    }
  <% end %>
} else {
      var uri = el.data("url");
      var results_format = function(item) {
      return "<li><div style='display: inline-block; padding-left: 10px;'><div class='full_name'>" + item.name + "</div><div class='email'>" + item.subject + "</div></div></li>"
    }
    var addCandiInfo = function(item) {
      $("#candidate_id").val(item.id);
    }
    var markToDelete = "";
  }
  el.tokenInput(uri, {
    crossDomain: false,
    theme: "facebook",
    prePopulate: el.data("pre"),
    preventDuplicates: true,
    hintText: el.data("hint-text"),
    tokenLimit: el.data("token-limit"),
    onAdd: addCandiInfo,
    onDelete: markToDelete,
    resultsFormatter: results_format,
    noResultsText: el.data("noresults"),
    searchingText: el.data("searching-text")
  });
}
});

<% if params[:action] == "edit" %>
$('.datetime_picker_edit').removeClass('hasDatepicker').datetimepicker({
      dateFormat : 'dd-mm-yy',
      ampm: true,
      minDate: 0
    });
<% else %>
    $('.datetime_picker').datetimepicker({
      dateFormat : 'dd-mm-yy',
      ampm: true,
      minDate: 0
    });
<% end %>
});

</script>
